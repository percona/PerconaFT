language: c
compiler: gcc
matrix:
  fast_finish: true
  include:
    # OS X Mavericks
    - os: osx
      env: PLATFORM="OS X Mavericks" CMD="make gnu90test && make clean && make test && make clean && make travis-install"
    # Container-based Ubuntu 12.04 LTS Server Edition 64 bit (doesn't support 32-bit includes)
    - os: linux
      sudo: false
      env: PLATFORM="Ubuntu 12.04 container" CMD="make test && make clean && make travis-install"
    - os: linux
      sudo: false
      language: cpp
      install:
        - export CXX="g++-4.8" CC="gcc-4.8"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-4.8
            - g++-4.8
      env: PLATFORM="Ubuntu 12.04 container" CMD="make zlibwrapper && make clean && make -C tests test-zstd_nolegacy && make clean && make clean && make cmaketest && make clean && make -C contrib/pzstd pzstd && make -C contrib/pzstd googletest && make -C contrib/pzstd test && make -C contrib/pzstd clean"
    - os: linux
      sudo: false
      env: PLATFORM="Ubuntu 12.04 container" CMD="make usan"
    - os: linux
      sudo: false
      env: PLATFORM="Ubuntu 12.04 container" CMD="make asan"
    # Standard Ubuntu 12.04 LTS Server Edition 64 bit
    - os: linux
      sudo: required
      env: PLATFORM="Ubuntu 12.04" CMD="make armtest"
      addons:
        apt:
          packages:
            - gcc-arm-linux-gnueabi
            - libc6-dev-armel-cross
            - linux-libc-dev-armel-cross
            - binfmt-support
            - qemu
            - qemu-user-static
    - os: linux
      sudo: required
      env: PLATFORM="Ubuntu 12.04" CMD="make -C tests versionsTest"
    - os: linux
      sudo: required
      env: PLATFORM="Ubuntu 12.04" CMD="make asan32"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - libc6-dev-i386
            - gcc-multilib
    # Ubuntu 14.04 LTS Server Edition 64 bit
    - os: linux
      dist: trusty
      sudo: required
      env: PLATFORM="Ubuntu 14.04" CMD='make -C lib all && CFLAGS="-O1 -g" make -C zlibWrapper valgrindTest && make -C tests valgrindTest'
      addons:
        apt:
          packages:
            - valgrind
    - os: linux
      dist: trusty
      sudo: required
      install:
        - export CXX="g++-4.8" CC="gcc-4.8"
      env: PLATFORM="Ubuntu 14.04" CMD="make gpptest && make clean && make gnu90test && make clean && make c99test && make clean && make gnu99test && make clean && make clangtest && make clean && make -C contrib/pzstd pzstd32 && make -C contrib/pzstd googletest32 && make -C contrib/pzstd test32 && make -C contrib/pzstd clean"
      addons:
        apt:
          packages:
            - libc6-dev-i386
            - g++-multilib
            - gcc-4.8
            - gcc-4.8-multilib
            - g++-4.8
            - g++-4.8-multilib
    - os: linux
      dist: trusty
      sudo: required
      env: PLATFORM="Ubuntu 14.04" CMD="make -C tests test32"
      addons:
        apt:
          packages:
            - libc6-dev-i386
            - gcc-multilib
    - os: linux
      dist: trusty
      sudo: required
      env: PLATFORM="Ubuntu 14.04" CMD="make gcc5test && make clean && make gcc6test && sudo apt-get install -y -q qemu-system-ppc binfmt-support qemu-user-static gcc-powerpc-linux-gnu && make clean && make ppctest"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-multilib
            - gcc-5
            - gcc-5-multilib
            - gcc-6
            - gcc-6-multilib
  exclude:
    - compiler: gcc

script:
  - sh -c "$CMD"
